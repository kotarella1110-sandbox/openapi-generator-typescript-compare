/* tslint:disable */
/* eslint-disable */
/**
 * Example
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExampleNonRef
 */
export interface ExampleNonRef {
    /**
     * 
     * @type {string | number | boolean | Array<number> | Array<boolean> | Array<string> | Array<object> | object}
     * @memberof ExampleNonRef
     */
    oneOf?: string | number | boolean | Array<number> | Array<boolean> | Array<string> | Array<object> | object;
    /**
     * 
     * @type {Array<string | number | boolean | Array<number> | Array<boolean> | Array<string> | Array<object> | object>}
     * @memberof ExampleNonRef
     */
    arrayOneOf?: Array<string | number | boolean | Array<number> | Array<boolean> | Array<string> | Array<object> | object>;
    /**
     * 
     * @type {string}
     * @memberof ExampleNonRef
     */
    nullableEnum?: ExampleNonRefNullableEnumEnum;
    /**
     * 
     * @type {Date}
     * @memberof ExampleNonRef
     */
    date?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ExampleNonRef
     */
    dateTime?: Date;
}

/**
* @export
* @enum {string}
*/
export enum ExampleNonRefNullableEnumEnum {
    _00 = '00',
    _01 = '01',
    _02 = '02'
}

export function ExampleNonRefFromJSON(json: any): ExampleNonRef {
    return ExampleNonRefFromJSONTyped(json, false);
}

export function ExampleNonRefFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExampleNonRef {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'oneOf': !exists(json, 'oneOf') ? undefined : string | number | boolean | Array&lt;number&gt; | Array&lt;boolean&gt; | Array&lt;string&gt; | Array&lt;object&gt; | objectFromJSON(json['oneOf']),
        'arrayOneOf': !exists(json, 'arrayOneOf') ? undefined : ((json['arrayOneOf'] as Array<any>).map(string | number | boolean | Array&lt;number&gt; | Array&lt;boolean&gt; | Array&lt;string&gt; | Array&lt;object&gt; | objectFromJSON)),
        'nullableEnum': !exists(json, 'nullableEnum') ? undefined : json['nullableEnum'],
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
        'dateTime': !exists(json, 'dateTime') ? undefined : (new Date(json['dateTime'])),
    };
}

export function ExampleNonRefToJSON(value?: ExampleNonRef | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'oneOf': string | number | boolean | Array&lt;number&gt; | Array&lt;boolean&gt; | Array&lt;string&gt; | Array&lt;object&gt; | objectToJSON(value.oneOf),
        'arrayOneOf': value.arrayOneOf === undefined ? undefined : ((value.arrayOneOf as Array<any>).map(string | number | boolean | Array&lt;number&gt; | Array&lt;boolean&gt; | Array&lt;string&gt; | Array&lt;object&gt; | objectToJSON)),
        'nullableEnum': value.nullableEnum,
        'date': value.date === undefined ? undefined : (value.date.toISOString().substr(0,10)),
        'dateTime': value.dateTime === undefined ? undefined : (value.dateTime.toISOString()),
    };
}


